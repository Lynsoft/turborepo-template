# Lefthook configuration for Turborepo monorepo
# Runs code quality checks before commits to maintain high standards

# Global settings
min_version: 1.5.0
source_dir: .
source_dir_local: .lefthook-local

# Skip hooks in CI environments (optional)
skip_output:
  - meta
  - execution

# Pre-commit hooks - run before each commit
pre-commit:
  # Parallel execution for better performance
  parallel: true

  commands:
    # Biome format and lint - comprehensive check with auto-fix
    biome-check:
      glob: "*.{js,jsx,ts,tsx,json,jsonc}"
      run: pnpm biome check --write {staged_files}
      stage_fixed: true
      fail_text: "Biome check failed. Some issues have been auto-fixed, please review and commit again."

    # TypeScript compilation check - only if TypeScript files are staged
    typescript-check:
      glob: "*.{ts,tsx}"
      run: |
        if [ -n "{staged_files}" ]; then
          pnpm check-types
        fi
      fail_text: "TypeScript compilation failed. Please fix type errors and try again."

# Pre-push hooks - run before pushing to remote
pre-push:
  commands:
    # Full build check to ensure everything compiles
    build-check:
      run: pnpm build
      fail_text: "Build failed. Please fix build errors before pushing."

    # Full type checking across all workspaces
    full-type-check:
      run: pnpm check-types
      fail_text: "Type checking failed. Please fix type errors before pushing."

# Commit message hooks - enforce conventional commit format
commit-msg:
  commands:
    # Commitlint - validate commit message format
    commitlint:
      run: pnpm commitlint --edit $1
      fail_text: "Commit message does not follow conventional commit format. Please fix and try again."

# Post-checkout hooks - run after switching branches (optional)
post-checkout:
  commands:
    # Install dependencies if package files changed
    install-deps:
      run: |
        if git diff --name-only HEAD@{1} HEAD | grep -E "(package\.json|pnpm-lock\.yaml)" > /dev/null 2>&1; then
          echo "Package files changed, running pnpm install..."
          pnpm install
        fi

# Post-merge hooks - run after merging (optional)
post-merge:
  commands:
    # Install dependencies if package files changed
    install-deps:
      run: |
        if git diff --name-only HEAD@{1} HEAD | grep -E "(package\.json|pnpm-lock\.yaml)" > /dev/null 2>&1; then
          echo "Package files changed, running pnpm install..."
          pnpm install
        fi
